plugins {
    id("java")
    id("application")
    id("org.springframework.boot") version "3.4.2" 
    id("io.spring.dependency-management") version "1.1.7"
}

group = "org.bodyguide_sv"
version = "1.0"
description = "BODYGUIDE_SV"
java.sourceCompatibility = JavaVersion.VERSION_17


application {
    mainClass.set("org.bodyguide_sv.AppApplication")
}

sourceSets {
    main {
        java.srcDirs("app/src/main/resources") 
    }
}

allprojects {

    repositories {
        mavenCentral()
    }
    
}

// 모든 하위 모듈에 공통 설정 적용
subprojects {

    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        // Spring Boot 기본 의존성
        implementation("org.springframework.boot:spring-boot-starter")
        implementation("org.springframework.boot:spring-boot-starter-web")
        implementation("org.springframework.boot:spring-boot-starter-webflux")
        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation("org.springframework.boot:spring-boot-starter-security")
        implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
        implementation("org.springframework.boot:spring-boot-starter-data-redis")
        implementation("org.springframework.boot:spring-boot-starter-validation")

        // JSON 처리
        implementation("com.fasterxml.jackson.core:jackson-databind")
        implementation("org.json:json:20240303")

        // MySQL
        implementation("mysql:mysql-connector-java:8.0.33")

        // JWT
        implementation("io.jsonwebtoken:jjwt-api:0.11.2")
        implementation("io.jsonwebtoken:jjwt-impl:0.11.2")
        implementation("io.jsonwebtoken:jjwt-jackson:0.11.2")

        // SpringDoc OpenAPI
        implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4")

        // Lombok (컴파일 타임 전용)
        compileOnly("org.projectlombok:lombok:1.18.30")
        annotationProcessor("org.projectlombok:lombok:1.18.30")

        // QueryDSL 설정
        implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
        implementation("com.querydsl:querydsl-core:5.0.0")

        annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta")
        annotationProcessor("jakarta.persistence:jakarta.persistence-api:3.1.0")   
        annotationProcessor("jakarta.annotation:jakarta.annotation-api:2.1.1") 

        // JUnit 5 (Jupiter)
        testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }

    // QueryDSL 자동 생성 경로 설정
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    // 빌드시 QueryDSL 자동 생성
    tasks.named("compileJava") {
        dependsOn("clean")
    }

    // ✅ 모든 하위 모듈에서 JUnit 5 사용
    tasks.named('test') {
        useJUnitPlatform()
    }

    dependencyManagement {
        
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0" // Spring Cloud BOM 추가
        }

    }
}
